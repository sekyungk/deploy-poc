name: Production Deployment
on:
  release:
    types:
      - published

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: build
        run: npm install && npm run build

      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./build s3://test.sekyung.kim

      - uses: actions/setup-node@v1
        with:
          version: 12
      - run: npm install @octokit/action
      # Node.js script can be anywhere. A good convention is to put local GitHub Actions
      # into the `.github/actions` folder
      - run: node .github/actions/my-script.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.release.tag_name }}

      # - name: TEST
      # - uses: octokit/request-action@v2.x
      #   id: get_latest_release
      #   with:
      #     route: GET /repos/{owner}/{repo}/releases/tags/${{ github.event.release.tag_name }}
      #     owner: sekyungk
      #     repo: deploy-poc
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - run: echo

      # - name: TEST
      # - uses: octokit/request-action@v2.x
      #   with:
      #     route: Delete /repos/{owner}/{repo}/releases/{release_id}
      #     owner: sekyungk
      #     repo: deploy-poc
      #     release_id: ${{ fromJson(steps.get_latest_release.outputs.data).id }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - run: echo
